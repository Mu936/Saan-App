rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own profile and read other users' public info
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Chat documents - participants can read/write
    match /chats/{chatId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.participants;
    }

    // Messages - anyone in the chat can read/write
    match /messages/{messageId} {
      allow read, write: if request.auth != null;
      // You could add more specific rules here to check if user is in the chat
    }

    // Opportunities are readable by all authenticated users
    match /opportunities/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // Any authenticated user can post jobs
    }

    // Courses are readable by all authenticated users
    match /courses/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // Instructors can create courses
    }

    // User progress is private to each user
    match /userProgress/{document} {
      allow read, write: if request.auth != null &&
        (resource.data.userId == request.auth.uid || 
         request.resource.data.userId == request.auth.uid);
    }

    // Emergency broadcasts - all authenticated users can read, any can create
    match /emergencies/{document} {
      allow read, create: if request.auth != null;
    }
  }
}
